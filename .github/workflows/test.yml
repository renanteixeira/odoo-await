name: Test Suite

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test-multi-version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        odoo-version: ['12.0', '13.0', '14.0', '15.0', '16.0', '17.0', '18.0']
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Start Odoo ${{ matrix.odoo-version }} environment
      run: |
        chmod +x ./manage-odoo.sh
        chmod +x ./init-all-odoo.sh
        chmod +x ./test-all-versions.sh
        ./manage-odoo.sh init

    - name: Wait for services to be ready
      run: |
        echo "Waiting for all Odoo services to be ready..."
        for version in 12 13 14 15 16 17 18; do
          port=$((${version}069))
          echo "Waiting for Odoo ${version}.0 on port $port..."
          timeout 120 bash -c "until curl -s http://localhost:$port > /dev/null; do sleep 5; done"
        done

    - name: Test Odoo ${{ matrix.odoo-version }}
      run: |
        version="${{ matrix.odoo-version }}"
        version_num="${version%.*}"
        port="${version_num}069"
        
        echo "Testing Odoo $version on port $port"
        ODOO_DB="odoo${version_num}" \
        ODOO_USER="admin" \
        ODOO_PW="admin" \
        ODOO_BASE_URL="http://localhost:${port}" \
        npm test

    - name: Check services status
      if: always()
      run: ./manage-odoo.sh status

  test-all-versions:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Initialize multi-version environment
      run: |
        chmod +x ./manage-odoo.sh
        chmod +x ./init-all-odoo.sh
        chmod +x ./test-all-versions.sh
        ./manage-odoo.sh init

    - name: Wait for all services to be ready
      run: |
        echo "Waiting for all Odoo services to be ready..."
        for version in 12 13 14 15 16 17 18; do
          port=$((${version}069))
          echo "Waiting for Odoo ${version}.0 on port $port..."
          timeout 120 bash -c "until curl -s http://localhost:$port > /dev/null; do sleep 3; done" || {
            echo "Warning: Odoo ${version}.0 may not be ready yet"
          }
        done

    - name: Run comprehensive test suite
      run: |
        echo "Starting comprehensive test suite..."
        ./test-all-versions.sh || {
          echo "Some tests failed, but continuing to generate report..."
          ./manage-odoo.sh status
          exit 1
        }

    - name: Generate test report
      if: always()
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Multi-version Odoo testing completed" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“Š Versions tested: 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0" >> $GITHUB_STEP_SUMMARY
        ./manage-odoo.sh status
